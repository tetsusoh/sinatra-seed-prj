var constants={ADD_TODO:"ADD_TODO",TOGGLE_TODO:"TOGGLE_TODO",CLEAR_TODOS:"CLEAR_TODOS"},TodoStore=Fluxxor.createStore({initialize:function(){this.todoId=0,this.todos={},this.bindActions(constants.ADD_TODO,this.onAddTodo,constants.TOGGLE_TODO,this.onToggleTodo,constants.CLEAR_TODOS,this.onClearTodos)},onAddTodo:function(t){var e=this._nextTodoId(),o={id:e,text:t.text,complete:!1};this.todos[e]=o,this.emit("change")},onToggleTodo:function(t){var e=t.id;this.todos[e].complete=!this.todos[e].complete,this.emit("change")},onClearTodos:function(){var t=this.todos;Object.keys(t).forEach(function(e){t[e].complete&&delete t[e]}),this.emit("change")},getState:function(){return{todos:this.todos}},_nextTodoId:function(){return++this.todoId}}),actions={addTodo:function(t){this.dispatch(constants.ADD_TODO,{text:t})},toggleTodo:function(t){this.dispatch(constants.TOGGLE_TODO,{id:t})},clearTodos:function(){this.dispatch(constants.CLEAR_TODOS)}},stores={TodoStore:new TodoStore},flux=new Fluxxor.Flux(stores,actions);window.flux=flux,flux.on("dispatch",function(t,e){console&&console.log&&console.log("[Dispatch]",t,e)});var FluxMixin=Fluxxor.FluxMixin(React),StoreWatchMixin=Fluxxor.StoreWatchMixin,Application=React.createClass({displayName:"Application",mixins:[FluxMixin,StoreWatchMixin("TodoStore")],getInitialState:function(){return{newTodoText:""}},getStateFromFlux:function(){var t=this.getFlux();return t.store("TodoStore").getState()},render:function(){var t=this.state.todos;return React.createElement("div",null,React.createElement("ul",null,Object.keys(t).map(function(e){return React.createElement("li",{key:e},React.createElement(TodoItem,{todo:t[e]}))})),React.createElement("form",{onSubmit:this.onSubmitForm},React.createElement("input",{type:"text",size:"30",placeholder:"New Todo",value:this.state.newTodoText,onChange:this.handleTodoTextChange}),React.createElement("input",{type:"submit",value:"Add Todo"})),React.createElement("button",{onClick:this.clearCompletedTodos},"Clear Completed"))},handleTodoTextChange:function(t){this.setState({newTodoText:t.target.value})},onSubmitForm:function(t){t.preventDefault(),this.state.newTodoText.trim()&&(this.getFlux().actions.addTodo(this.state.newTodoText),this.setState({newTodoText:""}))},clearCompletedTodos:function(t){this.getFlux().actions.clearTodos()}}),TodoItem=React.createClass({displayName:"TodoItem",mixins:[FluxMixin],propTypes:{todo:React.PropTypes.object.isRequired},render:function(){var t={textDecoration:this.props.todo.complete?"line-through":""};return React.createElement("span",{style:t,onClick:this.onClick},this.props.todo.text)},onClick:function(){this.getFlux().actions.toggleTodo(this.props.todo.id)}});React.render(React.createElement(Application,{flux:flux}),document.getElementById("app"));